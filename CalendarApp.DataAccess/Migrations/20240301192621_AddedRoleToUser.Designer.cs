// <auto-generated />
using System;
using CalendarApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalendarApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240301192621_AddedRoleToUser")]
    partial class AddedRoleToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("CalendarApp.Api.Entities.ScheduledClass", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("ScheduledClasses");
                });

            modelBuilder.Entity("CalendarApp.Api.Entities.Subject", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("FacultyType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CalendarApp.Api.Entities.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("Faculty1Id")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("Faculty2Id")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("Faculty3Id")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Faculty1Id");

                    b.HasIndex("Faculty2Id");

                    b.HasIndex("Faculty3Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CalendarApp.Api.Entities.ScheduledClass", b =>
                {
                    b.HasOne("CalendarApp.Api.Entities.Subject", "Subject")
                        .WithMany("ScheduledClasses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CalendarApp.Api.Entities.User", b =>
                {
                    b.HasOne("CalendarApp.Api.Entities.Subject", "Faculty1")
                        .WithMany()
                        .HasForeignKey("Faculty1Id");

                    b.HasOne("CalendarApp.Api.Entities.Subject", "Faculty2")
                        .WithMany()
                        .HasForeignKey("Faculty2Id");

                    b.HasOne("CalendarApp.Api.Entities.Subject", "Faculty3")
                        .WithMany()
                        .HasForeignKey("Faculty3Id");

                    b.Navigation("Faculty1");

                    b.Navigation("Faculty2");

                    b.Navigation("Faculty3");
                });

            modelBuilder.Entity("CalendarApp.Api.Entities.Subject", b =>
                {
                    b.Navigation("ScheduledClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
